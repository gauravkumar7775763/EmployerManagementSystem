// <auto-generated />
using System;
using EmployerManagementSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployerManagementSystem.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployerManagementSystem.Models.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressId"));

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ZipCode")
                        .HasColumnType("float");

                    b.HasKey("AddressId");

                    b.ToTable("Address");

                    b.HasData(
                        new
                        {
                            AddressId = 1,
                            AddressLine1 = "123 Main St",
                            AddressLine2 = "",
                            City = "Mumbai",
                            State = "Maharashtra",
                            ZipCode = 12345.0
                        },
                        new
                        {
                            AddressId = 2,
                            AddressLine1 = "456 Oak St",
                            AddressLine2 = "",
                            City = "Pune",
                            State = "Maharashtra",
                            ZipCode = 67890.0
                        });
                });

            modelBuilder.Entity("EmployerManagementSystem.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 12, 29, 23, 1, 11, 118, DateTimeKind.Local).AddTicks(9071));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.HasIndex("FirstName", "LastName", "EmailAddress")
                        .IsUnique();

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            AddressId = 1,
                            Age = 30,
                            CreatedAt = new DateTime(2023, 12, 29, 23, 1, 11, 119, DateTimeKind.Local).AddTicks(601),
                            CreatedBy = "Seeder",
                            EmailAddress = "gaurav.thakur@gmail.com",
                            FirstName = "Gaurav",
                            LastModifiedAt = new DateTime(2023, 12, 29, 23, 1, 11, 119, DateTimeKind.Local).AddTicks(602),
                            LastName = "Thakur",
                            ModifiedBy = "Seeder"
                        },
                        new
                        {
                            EmployeeId = 2,
                            AddressId = 2,
                            Age = 25,
                            CreatedAt = new DateTime(2023, 12, 29, 23, 1, 11, 119, DateTimeKind.Local).AddTicks(605),
                            CreatedBy = "Seeder",
                            EmailAddress = "Amrish.Thakur@gmail.com",
                            FirstName = "Amrish",
                            LastModifiedAt = new DateTime(2023, 12, 29, 23, 1, 11, 119, DateTimeKind.Local).AddTicks(605),
                            LastName = "Thakur",
                            ModifiedBy = "Seeder"
                        });
                });

            modelBuilder.Entity("EmployerManagementSystem.Models.Employee", b =>
                {
                    b.HasOne("EmployerManagementSystem.Models.Address", "Address")
                        .WithOne()
                        .HasForeignKey("EmployerManagementSystem.Models.Employee", "AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });
#pragma warning restore 612, 618
        }
    }
}
